{"id":"ajez","dependencies":[{"name":"/home/ubuntu/pong/node_modules/ethers/lib.esm/abi/bytes32.js.map","includedInParent":true,"mtime":1752068818693},{"name":"/home/ubuntu/pong/node_modules/ethers/src.ts/abi/bytes32.ts","includedInParent":true,"mtime":1752068818837},{"name":"/home/ubuntu/pong/package.json","includedInParent":true,"mtime":1752069329250},{"name":"/home/ubuntu/pong/.babelrc","includedInParent":true,"mtime":1752069338206},{"name":"/home/ubuntu/pong/node_modules/ethers/lib.esm/package.json","includedInParent":true,"mtime":1752068818665},{"name":"../utils/index.js","loc":{"line":6,"column":66,"index":146},"parent":"/home/ubuntu/pong/node_modules/ethers/lib.esm/abi/bytes32.js","resolved":"/home/ubuntu/pong/node_modules/ethers/lib.esm/utils/index.js"}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.decodeBytes32String=r,exports.encodeBytes32String=e;var t=require(\"../utils/index.js\");function e(e){const r=(0,t.toUtf8Bytes)(e);if(r.length>31)throw new Error(\"bytes32 string must be less than 32 bytes\");return(0,t.zeroPadBytes)(r,32)}function r(e){const r=(0,t.getBytes)(e,\"bytes\");if(32!==r.length)throw new Error(\"invalid bytes32 - not 32 bytes long\");if(0!==r[31])throw new Error(\"invalid bytes32 string - no null terminator\");let n=31;for(;0===r[n-1];)n--;return(0,t.toUtf8String)(r.slice(0,n))}"},"sourceMaps":{"js":{"mappings":[{"source":"../../src.ts/abi/bytes32.ts","name":null,"original":{"line":44,"column":0},"generated":{"line":1,"column":0}},{"source":"../../src.ts/abi/bytes32.ts","name":null,"original":{"line":44,"column":0},"generated":{"line":1,"column":13}},{"source":"../../src.ts/abi/bytes32.ts","name":null,"original":{"line":44,"column":0},"generated":{"line":1,"column":20}},{"source":"../../src.ts/abi/bytes32.ts","name":null,"original":{"line":44,"column":0},"generated":{"line":1,"column":35}},{"source":"../../src.ts/abi/bytes32.ts","name":null,"original":{"line":44,"column":0},"generated":{"line":1,"column":43}},{"source":"../../src.ts/abi/bytes32.ts","name":null,"original":{"line":44,"column":0},"generated":{"line":1,"column":56}},{"source":"../../src.ts/abi/bytes32.ts","name":null,"original":{"line":44,"column":0},"generated":{"line":1,"column":57}},{"source":"../../src.ts/abi/bytes32.ts","name":null,"original":{"line":44,"column":0},"generated":{"line":1,"column":64}},{"source":"../../src.ts/abi/bytes32.ts","name":null,"original":{"line":44,"column":0},"generated":{"line":1,"column":68}},{"source":"../../src.ts/abi/bytes32.ts","name":null,"original":{"line":44,"column":0},"generated":{"line":1,"column":76}},{"source":"../../src.ts/abi/bytes32.ts","name":null,"original":{"line":44,"column":0},"generated":{"line":1,"column":96}},{"source":"../../src.ts/abi/bytes32.ts","name":null,"original":{"line":44,"column":0},"generated":{"line":1,"column":98}},{"source":"../../src.ts/abi/bytes32.ts","name":null,"original":{"line":44,"column":0},"generated":{"line":1,"column":106}},{"source":"../../src.ts/abi/bytes32.ts","name":null,"original":{"line":44,"column":0},"generated":{"line":1,"column":126}},{"source":"../../src.ts/abi/bytes32.ts","name":null,"original":{"line":7,"column":0},"generated":{"line":1,"column":128}},{"source":"../../src.ts/abi/bytes32.ts","name":null,"original":{"line":7,"column":0},"generated":{"line":1,"column":132}},{"source":"../../src.ts/abi/bytes32.ts","name":null,"original":{"line":7,"column":0},"generated":{"line":1,"column":134}},{"source":"../../src.ts/abi/bytes32.ts","name":null,"original":{"line":7,"column":0},"generated":{"line":1,"column":142}},{"source":"../../src.ts/abi/bytes32.ts","name":null,"original":{"line":16,"column":6},"generated":{"line":1,"column":163}},{"source":"../../src.ts/abi/bytes32.ts","name":null,"original":{"line":16,"column":16},"generated":{"line":1,"column":172}},{"source":"../../src.ts/abi/bytes32.ts","name":null,"original":{"line":16,"column":36},"generated":{"line":1,"column":174}},{"source":"../../src.ts/abi/bytes32.ts","name":null,"original":{"line":19,"column":4},"generated":{"line":1,"column":177}},{"source":"../../src.ts/abi/bytes32.ts","name":null,"original":{"line":19,"column":10},"generated":{"line":1,"column":183}},{"source":"../../src.ts/abi/bytes32.ts","name":null,"original":{"line":19,"column":18},"generated":{"line":1,"column":186}},{"source":"../../src.ts/abi/bytes32.ts","name":null,"original":{"line":19,"column":18},"generated":{"line":1,"column":188}},{"source":"../../src.ts/abi/bytes32.ts","name":null,"original":{"line":19,"column":29},"generated":{"line":1,"column":190}},{"source":"../../src.ts/abi/bytes32.ts","name":null,"original":{"line":19,"column":30},"generated":{"line":1,"column":203}},{"source":"../../src.ts/abi/bytes32.ts","name":null,"original":{"line":22,"column":4},"generated":{"line":1,"column":206}},{"source":"../../src.ts/abi/bytes32.ts","name":null,"original":{"line":22,"column":8},"generated":{"line":1,"column":209}},{"source":"../../src.ts/abi/bytes32.ts","name":null,"original":{"line":22,"column":14},"generated":{"line":1,"column":211}},{"source":"../../src.ts/abi/bytes32.ts","name":null,"original":{"line":22,"column":23},"generated":{"line":1,"column":218}},{"source":"../../src.ts/abi/bytes32.ts","name":null,"original":{"line":22,"column":29},"generated":{"line":1,"column":221}},{"source":"../../src.ts/abi/bytes32.ts","name":null,"original":{"line":22,"column":35},"generated":{"line":1,"column":227}},{"source":"../../src.ts/abi/bytes32.ts","name":null,"original":{"line":22,"column":39},"generated":{"line":1,"column":231}},{"source":"../../src.ts/abi/bytes32.ts","name":null,"original":{"line":22,"column":45},"generated":{"line":1,"column":237}},{"source":"../../src.ts/abi/bytes32.ts","name":null,"original":{"line":25,"column":4},"generated":{"line":1,"column":282}},{"source":"../../src.ts/abi/bytes32.ts","name":null,"original":{"line":25,"column":11},"generated":{"line":1,"column":289}},{"source":"../../src.ts/abi/bytes32.ts","name":null,"original":{"line":25,"column":11},"generated":{"line":1,"column":291}},{"source":"../../src.ts/abi/bytes32.ts","name":null,"original":{"line":25,"column":23},"generated":{"line":1,"column":293}},{"source":"../../src.ts/abi/bytes32.ts","name":null,"original":{"line":25,"column":24},"generated":{"line":1,"column":307}},{"source":"../../src.ts/abi/bytes32.ts","name":null,"original":{"line":25,"column":31},"generated":{"line":1,"column":309}},{"source":"../../src.ts/abi/bytes32.ts","name":null,"original":{"line":31,"column":6},"generated":{"line":1,"column":313}},{"source":"../../src.ts/abi/bytes32.ts","name":null,"original":{"line":31,"column":16},"generated":{"line":1,"column":322}},{"source":"../../src.ts/abi/bytes32.ts","name":null,"original":{"line":31,"column":36},"generated":{"line":1,"column":324}},{"source":"../../src.ts/abi/bytes32.ts","name":null,"original":{"line":32,"column":4},"generated":{"line":1,"column":327}},{"source":"../../src.ts/abi/bytes32.ts","name":null,"original":{"line":32,"column":10},"generated":{"line":1,"column":333}},{"source":"../../src.ts/abi/bytes32.ts","name":null,"original":{"line":32,"column":17},"generated":{"line":1,"column":336}},{"source":"../../src.ts/abi/bytes32.ts","name":null,"original":{"line":32,"column":17},"generated":{"line":1,"column":338}},{"source":"../../src.ts/abi/bytes32.ts","name":null,"original":{"line":32,"column":25},"generated":{"line":1,"column":340}},{"source":"../../src.ts/abi/bytes32.ts","name":null,"original":{"line":32,"column":26},"generated":{"line":1,"column":350}},{"source":"../../src.ts/abi/bytes32.ts","name":null,"original":{"line":32,"column":34},"generated":{"line":1,"column":352}},{"source":"../../src.ts/abi/bytes32.ts","name":null,"original":{"line":35,"column":4},"generated":{"line":1,"column":361}},{"source":"../../src.ts/abi/bytes32.ts","name":null,"original":{"line":35,"column":24},"generated":{"line":1,"column":364}},{"source":"../../src.ts/abi/bytes32.ts","name":null,"original":{"line":35,"column":8},"generated":{"line":1,"column":369}},{"source":"../../src.ts/abi/bytes32.ts","name":null,"original":{"line":35,"column":13},"generated":{"line":1,"column":371}},{"source":"../../src.ts/abi/bytes32.ts","name":null,"original":{"line":35,"column":30},"generated":{"line":1,"column":378}},{"source":"../../src.ts/abi/bytes32.ts","name":null,"original":{"line":35,"column":36},"generated":{"line":1,"column":384}},{"source":"../../src.ts/abi/bytes32.ts","name":null,"original":{"line":35,"column":40},"generated":{"line":1,"column":388}},{"source":"../../src.ts/abi/bytes32.ts","name":null,"original":{"line":35,"column":46},"generated":{"line":1,"column":394}},{"source":"../../src.ts/abi/bytes32.ts","name":null,"original":{"line":36,"column":4},"generated":{"line":1,"column":433}},{"source":"../../src.ts/abi/bytes32.ts","name":null,"original":{"line":36,"column":21},"generated":{"line":1,"column":436}},{"source":"../../src.ts/abi/bytes32.ts","name":null,"original":{"line":36,"column":8},"generated":{"line":1,"column":440}},{"source":"../../src.ts/abi/bytes32.ts","name":null,"original":{"line":36,"column":13},"generated":{"line":1,"column":442}},{"source":"../../src.ts/abi/bytes32.ts","name":null,"original":{"line":36,"column":26},"generated":{"line":1,"column":446}},{"source":"../../src.ts/abi/bytes32.ts","name":null,"original":{"line":36,"column":32},"generated":{"line":1,"column":452}},{"source":"../../src.ts/abi/bytes32.ts","name":null,"original":{"line":36,"column":36},"generated":{"line":1,"column":456}},{"source":"../../src.ts/abi/bytes32.ts","name":null,"original":{"line":36,"column":42},"generated":{"line":1,"column":462}},{"source":"../../src.ts/abi/bytes32.ts","name":null,"original":{"line":39,"column":4},"generated":{"line":1,"column":509}},{"source":"../../src.ts/abi/bytes32.ts","name":null,"original":{"line":39,"column":8},"generated":{"line":1,"column":513}},{"source":"../../src.ts/abi/bytes32.ts","name":null,"original":{"line":39,"column":17},"generated":{"line":1,"column":515}},{"source":"../../src.ts/abi/bytes32.ts","name":null,"original":{"line":40,"column":4},"generated":{"line":1,"column":518}},{"source":"../../src.ts/abi/bytes32.ts","name":null,"original":{"line":40,"column":32},"generated":{"line":1,"column":523}},{"source":"../../src.ts/abi/bytes32.ts","name":null,"original":{"line":40,"column":11},"generated":{"line":1,"column":527}},{"source":"../../src.ts/abi/bytes32.ts","name":null,"original":{"line":40,"column":16},"generated":{"line":1,"column":529}},{"source":"../../src.ts/abi/bytes32.ts","name":null,"original":{"line":40,"column":25},"generated":{"line":1,"column":531}},{"source":"../../src.ts/abi/bytes32.ts","name":null,"original":{"line":40,"column":37},"generated":{"line":1,"column":535}},{"source":"../../src.ts/abi/bytes32.ts","name":null,"original":{"line":43,"column":4},"generated":{"line":1,"column":539}},{"source":"../../src.ts/abi/bytes32.ts","name":null,"original":{"line":43,"column":11},"generated":{"line":1,"column":546}},{"source":"../../src.ts/abi/bytes32.ts","name":null,"original":{"line":43,"column":11},"generated":{"line":1,"column":548}},{"source":"../../src.ts/abi/bytes32.ts","name":null,"original":{"line":43,"column":23},"generated":{"line":1,"column":550}},{"source":"../../src.ts/abi/bytes32.ts","name":null,"original":{"line":43,"column":24},"generated":{"line":1,"column":564}},{"source":"../../src.ts/abi/bytes32.ts","name":null,"original":{"line":43,"column":29},"generated":{"line":1,"column":566}},{"source":"../../src.ts/abi/bytes32.ts","name":null,"original":{"line":43,"column":35},"generated":{"line":1,"column":572}},{"source":"../../src.ts/abi/bytes32.ts","name":null,"original":{"line":43,"column":38},"generated":{"line":1,"column":574}}],"sources":{"../../src.ts/abi/bytes32.ts":"/**\n *  About bytes32 strings...\n *\n *  @_docloc: api/utils:Bytes32 Strings\n */\n\nimport {\n    getBytes, toUtf8Bytes, toUtf8String, zeroPadBytes\n} from \"../utils/index.js\";\n\nimport type { BytesLike } from \"../utils/index.js\";\n\n/**\n *  Encodes %%text%% as a Bytes32 string.\n */\nexport function encodeBytes32String(text: string): string {\n\n    // Get the bytes\n    const bytes = toUtf8Bytes(text);\n\n    // Check we have room for null-termination\n    if (bytes.length > 31) { throw new Error(\"bytes32 string must be less than 32 bytes\"); }\n\n    // Zero-pad (implicitly null-terminates)\n    return zeroPadBytes(bytes, 32);\n}\n\n/**\n *  Encodes the Bytes32-encoded %%bytes%% into a string.\n */\nexport function decodeBytes32String(_bytes: BytesLike): string {\n    const data = getBytes(_bytes, \"bytes\");\n\n    // Must be 32 bytes with a null-termination\n    if (data.length !== 32) { throw new Error(\"invalid bytes32 - not 32 bytes long\"); }\n    if (data[31] !== 0) { throw new Error(\"invalid bytes32 string - no null terminator\"); }\n\n    // Find the null termination\n    let length = 31;\n    while (data[length - 1] === 0) { length--; }\n\n    // Determine the string value\n    return toUtf8String(data.slice(0, length));\n}\n\n"},"lineCount":null}},"error":null,"hash":"6c6ab5018bd4f25d1a0cd12edb5645cf","cacheData":{"env":{}}}